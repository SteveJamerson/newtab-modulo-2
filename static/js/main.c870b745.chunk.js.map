{"version":3,"sources":["ListaDeUsuarios.jsx","index.jsx"],"names":["ListaDeUsuarios","useState","_infos","_setInfos","infos","setInfos","useEffect","axios","get","method","then","resposta","data","setLoading","cards","card_number","cvv","expiry_date","abrirPagamento","setAbrirPagamento","pegarUsuario","setPegarUsuario","abrirPagou","setAbrirPagou","abrirNaoRecebeu","setAbrirNaoRecebeu","valorCartao","setValorCartao","valorDinheiro","setValorDinheiro","validarCampo","setValidarCampo","loading","className","htmlFor","type","name","id","onChange","event","value","target","_new","filter","username","Object","values","join","includes","placeholder","map","item","key","index","src","img","alt","onClick","style","display","onSubmit","e","preventDefault","class","thousandSeparator","replace","amount","Intl","NumberFormat","currency","format","substr","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c870b745.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./listadeusuarios.css\";\r\nimport axios from \"axios\";\r\n\r\n//Pegando as informações da API pelo GET\r\nconst ListaDeUsuarios = () => {\r\n  const [_infos, _setInfos] = useState([]);\r\n  const [infos, setInfos] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://www.mocky.io/v2/5d531c4f2e0000620081ddce\", {\r\n        method: \"GET\",\r\n      })\r\n      .then((resposta) => {\r\n        setInfos(resposta.data);\r\n        _setInfos(resposta.data);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  // Mock com lista de cartõs para teste\r\n  const cards = [\r\n    // cartão válido\r\n    {\r\n      card_number: \"1111111111111111\",\r\n      cvv: 789,\r\n      expiry_date: \"01/18\",\r\n    },\r\n    // cartão inválido\r\n    {\r\n      card_number: \"4111111111111234\",\r\n      cvv: 123,\r\n      expiry_date: \"01/20\",\r\n    },\r\n  ];\r\n\r\n  const filter = (event) => {\r\n    const value = event.target.value;\r\n    const _new = _infos.filter(({ id, name, username }) =>\r\n      Object.values({ id, name, username }).join().includes(value)\r\n    );\r\n    setInfos(_new);\r\n  };\r\n\r\n  // Função para pegar a escolha do cartão do input select\r\n  const escolhaDoCartao = (event) => {\r\n    setValorCartao(event.target.value);\r\n  };\r\n\r\n  // Ações dos modals\r\n  const [abrirPagamento, setAbrirPagamento] = useState(\"none\"); // Para abrir modal de pagamento\r\n  const [pegarUsuario, setPegarUsuario] = useState(\"\"); // Para pegar o nome do usuário\r\n  const [abrirPagou, setAbrirPagou] = useState(\"none\"); // Para abrir modal com recibo de pagamento\r\n  const [abrirNaoRecebeu, setAbrirNaoRecebeu] = useState(\"\"); // Para msg de erro de pagamento\r\n  const [valorCartao, setValorCartao] = useState(\"1\"); // Para pegar o cartão escolhido para pagamento\r\n  const [valorDinheiro, setValorDinheiro] = useState(\"\"); // Para pegar o valor de pagamento digitado\r\n  const [validarCampo, setValidarCampo] = useState(\"none\"); // Para validar campo de valor digitado\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Função para abrir o modal de pagamento do usuário\r\n  const modalPagar = (name) => {\r\n    setAbrirPagamento(\"flex\");\r\n    setPegarUsuario(name);\r\n  };\r\n\r\n  // Função que abre o modal de recibo de pagamento\r\n  const modalPagou = (e) => {\r\n    e.preventDefault();\r\n    if (valorDinheiro === \"\") {\r\n      setValidarCampo(\"flex\");\r\n    } else {\r\n      if (valorCartao === \"1\") {\r\n        setAbrirNaoRecebeu(\"\");\r\n      } else {\r\n        setAbrirNaoRecebeu(\"não\");\r\n      }\r\n      setAbrirPagamento(\"none\");\r\n      setAbrirPagou(\"flex\");\r\n      setValorDinheiro(\"\");\r\n      setValidarCampo(\"none\");\r\n    }\r\n  };\r\n\r\n  // Função para fechar o modal do recibo de pagamento\r\n  const fecharModal = () => {\r\n    setAbrirPagou(\"none\");\r\n  };\r\n\r\n  // Função para validar campo de valor para pagamento do usuário\r\n  const valorInput = (event) => {\r\n    const value = event.target.value.replace(/\\D/g, \"\");\r\n    const amount = new Intl.NumberFormat(\"pt-BR\", {\r\n      style: \"currency\",\r\n      currency: \"BRL\",\r\n    }).format(value / 100);\r\n    setValorDinheiro(amount);\r\n    setValidarCampo(\"none\");\r\n  };\r\n\r\n  // Renderizando na tela as informações recebidas da API\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <div className=\"loading\">\r\n          \r\n        </div>\r\n      ) : (\r\n        <section className=\"container\">\r\n          <label htmlFor=\"search\">Buscar usuário</label>\r\n          <input\r\n            className=\"field\"\r\n            type=\"search\"\r\n            name=\"\"\r\n            id=\"search\"\r\n            onChange={filter}\r\n            placeholder=\"Pesquise por: Nome, ID e Username.\"\r\n          />\r\n          <div className=\"row\">\r\n            {infos.map((item) => (\r\n              <div className=\"card\" key={item.index}>\r\n                <div className=\"card-body\">\r\n                  <img\r\n                    className=\"thumbnail\"\r\n                    src={item.img}\r\n                    alt=\"Foto do usuário\"\r\n                  />\r\n                  <div className=\"infos\">\r\n                    <p className=\"title\">{item.name}</p>\r\n                    <ul className=\"description\">\r\n                      <li>\r\n                        <b>ID:</b> {item.id}\r\n                      </li>\r\n                      <li>\r\n                        <b>Username:</b> {item.username}\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <button\r\n                    className=\"modal-pay\"\r\n                    onClick={() => {\r\n                      modalPagar(item.name);\r\n                    }}\r\n                  >\r\n                    Pagar\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n\r\n            {/*--------------------------------Abrir Modal de pagamento----------------------------------*/}\r\n            <div className=\"modal\" style={{ display: abrirPagamento }}>\r\n              <div className=\"modal-content\">\r\n                <form onSubmit={modalPagou}>\r\n                  <p className=\"modal-header\">\r\n                    Pagamento para <span>{pegarUsuario}</span>\r\n                    <button\r\n                      class=\"close\"\r\n                      onClick={() => setAbrirPagamento(\"none\")}\r\n                    >\r\n                      <i class=\"close-icon\"></i>\r\n                      <i class=\"close-icon\"></i>\r\n                    </button>\r\n                  </p>\r\n                  <div className=\"modal-body\">\r\n                    <input\r\n                      className=\"field\"\r\n                      thousandSeparator={true}\r\n                      value={valorDinheiro}\r\n                      onChange={valorInput}\r\n                      placeholder=\"R$ 0,00\"\r\n                    />\r\n                    <small\r\n                      className=\"field-error\"\r\n                      style={{ display: validarCampo }}\r\n                    >\r\n                      Campo obrigatório\r\n                    </small>\r\n                    <select\r\n                      className=\"field\"\r\n                      value={valorCartao}\r\n                      onChange={escolhaDoCartao}\r\n                    >\r\n                      <option value=\"1\">\r\n                        Cartão com final {cards[0].card_number.substr(-4)}\r\n                      </option>\r\n                      <option value=\"2\">\r\n                        Cartão com final {cards[1].card_number.substr(-4)}\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"modal-footer\">\r\n                    <button type=\"submit\">Pagar</button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n\r\n            {/*------------------------------Abrir Modal de recibo de pagamento--------------------------------*/}\r\n            <div className=\"modal\" style={{ display: abrirPagou }}>\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header \">\r\n                  <p>Recibo de pagamento</p>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <p>\r\n                    O Pagamento <b>{abrirNaoRecebeu}</b> foi concluído com\r\n                    sucesso\r\n                  </p>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button\r\n                    onClick={() => {\r\n                      fecharModal();\r\n                    }}\r\n                  >\r\n                    Fechar\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListaDeUsuarios;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ListaDeUsuarios from './ListaDeUsuarios';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ListaDeUsuarios />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}