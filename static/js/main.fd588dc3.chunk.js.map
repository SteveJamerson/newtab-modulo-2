{"version":3,"sources":["ListaDeUsuarios.jsx","index.jsx"],"names":["ListaDeUsuarios","useState","infos","setInfos","useEffect","axios","get","method","then","resposta","data","cards","card_number","cvv","expiry_date","abrirPagamento","setAbrirPagamento","pegarUsuario","setPegarUsuario","abrirPagou","setAbrirPagou","abrirNaoRecebeu","setAbrirNaoRecebeu","valorCartao","setValorCartao","valorDinheiro","setValorDinheiro","validarCampo","setValidarCampo","className","map","item","key","index","src","img","alt","name","id","username","onClick","style","display","thousandSeparator","value","onChange","event","target","replace","amount","Intl","NumberFormat","currency","format","placeholder","substr","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQA0LeA,EArLS,WACtB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACAC,qBAAU,WACRC,IACGC,IAAI,mDAAoD,CACvDC,OAAQ,QAETC,MAAK,SAACC,GACLN,EAASM,EAASC,WAErB,IAGH,IAAMC,EAAQ,CAEZ,CACEC,YAAa,mBACbC,IAAK,IACLC,YAAa,SAGf,CACEF,YAAa,mBACbC,IAAK,IACLC,YAAa,UAUjB,EAA4Cb,mBAAS,QAArD,mBAAOc,EAAP,KAAuBC,EAAvB,KACA,EAAwCf,mBAAS,IAAjD,mBAAOgB,EAAP,KAAqBC,EAArB,KACA,EAAoCjB,mBAAS,QAA7C,mBAAOkB,EAAP,KAAmBC,EAAnB,KACA,EAA8CnB,mBAAS,IAAvD,mBAAOoB,EAAP,KAAwBC,EAAxB,KACA,EAAsCrB,mBAAS,KAA/C,mBAAOsB,EAAP,KAAoBC,EAApB,KACA,EAA0CvB,mBAAS,IAAnD,mBAAOwB,EAAP,KAAsBC,EAAtB,KACA,EAAwCzB,mBAAS,QAAjD,mBAAO0B,EAAP,KAAqBC,EAArB,KA0CA,OACE,6BAASC,UAAU,aACjB,yBAAKA,UAAU,OACZ3B,EAAM4B,KAAI,SAACC,GAAD,OACT,yBAAKF,UAAU,OAAOG,IAAKD,EAAKE,OAC9B,yBAAKJ,UAAU,aACb,yBAAKA,UAAU,YAAYK,IAAKH,EAAKI,IAAKC,IAAI,uBAC9C,yBAAKP,UAAU,SACb,uBAAGA,UAAU,SAASE,EAAKM,MAC3B,wBAAIR,UAAU,eACZ,4BACE,kCADF,IACcE,EAAKO,IAEnB,4BACE,wCADF,IACoBP,EAAKQ,YAI7B,4BACEV,UAAU,YACVW,QAAS,WA3DJ,IAACH,IA4DON,EAAKM,KA3D9BrB,EAAkB,QAClBE,EAAgBmB,KAuDN,cAaN,yBAAKR,UAAU,QAAQY,MAAO,CAAEC,QAAS3B,IACvC,yBAAKc,UAAU,iBACb,uBAAGA,UAAU,gBAAb,kBACiB,8BAAOZ,IAExB,yBAAKY,UAAU,cACX,2BACEA,UAAU,QACVc,mBAAmB,EACnBC,MAAOnB,EACPoB,SApDG,SAACC,GAClB,IAAMF,EAAQE,EAAMC,OAAOH,MAAMI,QAAQ,MAAO,IAC1CC,EAAS,IAAIC,KAAKC,aAAa,QAAS,CAC1CV,MAAO,WACPW,SAAU,QACTC,OAAOT,EAAQ,KACpBlB,EAAiBuB,GACjBrB,EAAgB,SA8CF0B,YAAY,YAEhB,2BAAOzB,UAAU,cAAcY,MAAO,CAAEC,QAASf,IAAjD,wBAGA,4BACEE,UAAU,QACVe,MAAOrB,EACPsB,SAvGU,SAACC,GACvBtB,EAAesB,EAAMC,OAAOH,SAwGhB,4BAAQA,MAAM,KAAd,uBACoBjC,EAAM,GAAGC,YAAY2C,QAAQ,IAEjD,4BAAQX,MAAM,KAAd,uBACoBjC,EAAM,GAAGC,YAAY2C,QAAQ,MAIrD,yBAAK1B,UAAU,gBACb,4BACEW,QAAS,WA9FC,KAAlBf,EACFG,EAAgB,SAGdN,EADkB,MAAhBC,EACiB,GAEA,UAErBP,EAAkB,QAClBI,EAAc,QACdM,EAAiB,IACjBE,EAAgB,WAkFR,YAYN,yBAAKC,UAAU,QAAQY,MAAO,CAAEC,QAASvB,IACvC,yBAAKU,UAAU,iBACb,yBAAKA,UAAU,iBACX,mDAEJ,yBAAKA,UAAU,cACb,0CACc,2BAAIR,GADlB,kCAIF,yBAAKQ,UAAU,gBACb,4BACEW,QAAS,WApGrBpB,EAAc,UAmGJ,gBCvKdoC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.fd588dc3.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./listadeusuarios.css\";\r\nimport axios from \"axios\";\r\n\r\n//Pegando as informações da API pelo GET\r\nconst ListaDeUsuarios = () => {\r\n  const [infos, setInfos] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://www.mocky.io/v2/5d531c4f2e0000620081ddce\", {\r\n        method: \"GET\",\r\n      })\r\n      .then((resposta) => {\r\n        setInfos(resposta.data);\r\n      });\r\n  }, []);\r\n\r\n  // Mock com lista de cartões para teste\r\n  const cards = [\r\n    // cartão válido\r\n    {\r\n      card_number: \"1111111111111111\",\r\n      cvv: 789,\r\n      expiry_date: \"01/18\",\r\n    },\r\n    // cartão inválido\r\n    {\r\n      card_number: \"4111111111111234\",\r\n      cvv: 123,\r\n      expiry_date: \"01/20\",\r\n    },\r\n  ];\r\n\r\n  // Função para pegar a escolha do cartão do input select\r\n  const escolhaDoCartao = (event) => {\r\n    setValorCartao(event.target.value);\r\n  };\r\n\r\n  // Ações dos modals\r\n  const [abrirPagamento, setAbrirPagamento] = useState(\"none\"); // Para abrir modal de pagamento\r\n  const [pegarUsuario, setPegarUsuario] = useState(\"\"); // Para pegar o nome do usuário\r\n  const [abrirPagou, setAbrirPagou] = useState(\"none\"); // Para abrir modal com recibo de pagamento\r\n  const [abrirNaoRecebeu, setAbrirNaoRecebeu] = useState(\"\"); // Para msg de erro de pagamento\r\n  const [valorCartao, setValorCartao] = useState(\"1\"); // Para pegar o cartão escolhido para pagamento\r\n  const [valorDinheiro, setValorDinheiro] = useState(\"\"); // Para pegar o valor de pagamento digitado\r\n  const [validarCampo, setValidarCampo] = useState(\"none\"); // Para validar campo de valor digitado\r\n\r\n  // Função para abrir o modal de pagamento do usuário\r\n  const modalPagar = (name) => {\r\n    setAbrirPagamento(\"flex\");\r\n    setPegarUsuario(name);\r\n  };\r\n\r\n  // Função que abre o modal de recibo de pagamento\r\n  const modalPagou = () => {\r\n    if (valorDinheiro === \"\") {\r\n      setValidarCampo(\"flex\");\r\n    } else {\r\n      if (valorCartao === \"1\") {\r\n        setAbrirNaoRecebeu(\"\");\r\n      } else {\r\n        setAbrirNaoRecebeu(\"não\");\r\n      }\r\n      setAbrirPagamento(\"none\");\r\n      setAbrirPagou(\"flex\");\r\n      setValorDinheiro(\"\");\r\n      setValidarCampo(\"none\");\r\n    }\r\n  };\r\n\r\n  // Função para fechar o modal do recibo de pagamento\r\n  const fecharModal = () => {\r\n    setAbrirPagou(\"none\");\r\n  };\r\n\r\n  // Função para validar campo de valor para pagamento do usuário\r\n  const valorInput = (event) => {\r\n    const value = event.target.value.replace(/\\D/g, '')\r\n    const amount = new Intl.NumberFormat(\"pt-BR\", {\r\n        style: \"currency\",\r\n        currency: \"BRL\"\r\n      }).format(value / 100);\r\n    setValorDinheiro(amount);\r\n    setValidarCampo(\"none\");\r\n  };\r\n\r\n  // Renderizando na tela as informações recebidas da API\r\n  return (\r\n    <section className=\"container\">\r\n      <div className=\"row\">\r\n        {infos.map((item) => (\r\n          <div className=\"card\" key={item.index}>\r\n            <div className=\"card-body\">\r\n              <img className=\"thumbnail\" src={item.img} alt=\"Foto do usuário\" />\r\n              <div className=\"infos\">\r\n                <p className=\"title\">{item.name}</p>\r\n                <ul className=\"description\">\r\n                  <li>\r\n                    <b>ID:</b> {item.id}\r\n                  </li>\r\n                  <li>\r\n                    <b>Username:</b> {item.username}\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <button\r\n                className=\"modal-pay\"\r\n                onClick={() => {\r\n                  modalPagar(item.name);\r\n                }}\r\n              >\r\n                Pagar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n        {/*--------------------------------Abrir Modal de pagamento----------------------------------*/}\r\n        <div className=\"modal\" style={{ display: abrirPagamento }}>\r\n          <div className=\"modal-content\">\r\n            <p className=\"modal-header\">\r\n              Pagamento para <span>{pegarUsuario}</span>\r\n            </p>\r\n            <div className=\"modal-body\">\r\n                <input\r\n                  className=\"field\"\r\n                  thousandSeparator={true}\r\n                  value={valorDinheiro}\r\n                  onChange={valorInput}\r\n                  placeholder=\"R$ 0,00\"\r\n                />\r\n              <small className=\"field-error\" style={{ display: validarCampo }}>\r\n                Campo obrigatório\r\n              </small>\r\n              <select\r\n                className=\"field\"\r\n                value={valorCartao}\r\n                onChange={escolhaDoCartao}\r\n              >\r\n                <option value=\"1\">\r\n                  Cartão com final {cards[0].card_number.substr(-4)}\r\n                </option>\r\n                <option value=\"2\">\r\n                  Cartão com final {cards[1].card_number.substr(-4)}\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                onClick={() => {\r\n                  modalPagou();\r\n                }}\r\n              >\r\n                Pagar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/*------------------------------Abrir Modal de recibo de pagamento--------------------------------*/}\r\n        <div className=\"modal\" style={{ display: abrirPagou }}>\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header \">\r\n                <p>Recibo de pagamento</p>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>\r\n                O Pagamento <b>{abrirNaoRecebeu}</b> foi concluído com sucesso\r\n              </p>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                onClick={() => {\r\n                  fecharModal();\r\n                }}\r\n              >\r\n                Fechar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ListaDeUsuarios;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ListaDeUsuarios from './ListaDeUsuarios';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ListaDeUsuarios />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}